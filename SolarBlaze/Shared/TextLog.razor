<ul>
    @foreach (var item in Messages)
    {
        <li class="@item.Item2.ToString().ToLowerInvariant()">@item.Item1</li>
    }
</ul>

@code
{
    private List<(string, LogType)> _log = new();
    public IReadOnlyList<(string, LogType)> Messages => _log;

    public void Append(string message, LogType type = LogType.Normal)
    {
        _log.Add((message, type));
        StateHasChanged();
    }

    public void Replace(string message, int replace, LogType type = LogType.Normal)
    {
        _log[_log.Count + replace] = (message, type);
        StateHasChanged();
    }

    public void Remove(Range range)
    {
        var start = range.Start.GetOffset(_log.Count);
        var end = range.End.GetOffset(_log.Count);
        _log.RemoveRange(start, end - start);
        StateHasChanged();
    }

    public void Remove(Index index)
    {
        var idx = index.GetOffset(_log.Count);
        _log.RemoveAt(idx);
        StateHasChanged();
    }

    public void Clear()
    {
        _log.Clear();
        _log.TrimExcess();
        StateHasChanged();
    }

    public enum LogType
    {
        Normal,
        Valid,
        Invalid,
        Processing,
    }
}
