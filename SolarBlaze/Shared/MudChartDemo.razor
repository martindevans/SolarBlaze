@using MudBlazor
@using System.Text.Json
@using System.Text.Json.Serialization
@using SolarBlaze.Config
@using SolarBlaze.Extensions
@using SolarBlaze.Services.MqttSqliteApi

@inject HttpClient Client

<div>
    <MudChart ChartType="ChartType.Line" ChartSeries="@Series" ChartOptions="@Options" LegendPosition="Position.Left" Width="100%" Height="350px"></MudChart>
</div>

@code {

    [CascadingParameter]
    public InitialSetup InitialSetup { get; private set; } = null!;

    public List<ChartSeries> Series = new List<ChartSeries>();
    private ChartOptions Options { get; } = new ChartOptions();

    private bool _fetchError;

    protected override void OnInitialized()
    {
        Options.DisableLegend = false;
    }

    protected override async Task OnInitializedAsync()
    {
        var client = new MqttSqliteApiClient(InitialSetup.ServerUrl, Client);
        var response = await client.FetchEventLog(Topic.All, DateTime.UtcNow - TimeSpan.FromDays(1), DateTime.UtcNow, 9999);

        if (!response.IsError)
        {
            Series = new List<ChartSeries>();

            foreach (var topic in response.Data.Topics)
            {
                Series.Add(new ChartSeries
                {
                    Name = topic.Key,
                    Data = topic.Value.Select(a => a.Value).ToArray()
                });
            }
        }
        else
        {
            _fetchError = true;
        }

        StateHasChanged();
    }
}